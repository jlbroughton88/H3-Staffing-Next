{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/all.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport \"../../public/static/css/allposts.scss\";\n\nvar All = function All(posts) {\n  var _useState = useState([]),\n      allPosts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    console.log(\"Below is line 12\");\n    console.log([posts.json][0]);\n    console.log(\"Below is line 14\");\n    console.log([posts.json[0]]);\n    setPosts([posts.json][0]);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"allMother\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"allHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"All Posts\"), __jsx(\"div\", {\n    className: \"postGrid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, console.log(\"below is line 21\"), console.log(typeof allPosts), allPosts.length !== 0 ? allPosts.reverse().map(function (post) {\n    return __jsx(Link, {\n      key: post.uid,\n      href: \"/blog/\".concat(post.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      key: post.uid,\n      className: \"blogPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"blogTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, post.title), __jsx(\"div\", {\n      className: \"dateTimeDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"blogTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, post.time_created), __jsx(\"p\", {\n      className: \"blogDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, post.date_created)), __jsx(\"hr\", {\n      className: \"blogsHr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), post.blog_text.length > 150 ? __jsx(\"p\", {\n      className: \"blogText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, post.blog_text.slice(0, 150), \"...\") : __jsx(\"p\", {\n      className: \"blogText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, post.blog_text)));\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"No posts yet\"))));\n};\n\nAll.getInitialProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://h3-staffing.now.sh/api/blog/all\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          console.log(\"below is from getInitialProps\");\n          console.log(json);\n          return _context.abrupt(\"return\", {\n            json: json\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default All;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/all.js"],"names":["React","useState","useEffect","fetch","Link","All","posts","allPosts","setPosts","console","log","json","length","reverse","map","post","uid","title","time_created","date_created","blog_text","slice","getInitialProps","ctx","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\"\nimport Link from \"next/link\";\nimport \"../../public/static/css/allposts.scss\";\n\nconst All = (posts) => {\n\n    const [allPosts, setPosts] = useState([])\n\n    useEffect(() => {\n        console.log(\"Below is line 12\")\n        console.log([posts.json][0])\n        console.log(\"Below is line 14\")\n        console.log([posts.json[0]])\n        setPosts([posts.json][0])\n    }, [])\n\n\n    return (\n        <div className=\"allMother\">\n        <h1 className=\"allHead\">All Posts</h1>\n        <div className=\"postGrid\">\n            {console.log(\"below is line 21\")}\n            {console.log(typeof(allPosts))}\n            {allPosts.length !== 0 ? (\n                allPosts.reverse().map(post =>\n                    <Link key={post.uid} href={`/blog/${post.uid}`}>\n                        <div key={post.uid} className=\"blogPost\">\n                            <h3 className=\"blogTitle\">{post.title}</h3>\n                            <div className=\"dateTimeDiv\">\n                                <p className=\"blogTime\">{post.time_created}</p>\n                                <p className=\"blogDate\">{post.date_created}</p>\n                            </div>\n                            <hr className=\"blogsHr\" />\n                            {post.blog_text.length > 150 ?\n                                <p className=\"blogText\">{post.blog_text.slice(0, 150)}...</p>\n                                :\n                                <p className=\"blogText\">{post.blog_text}</p>\n                            }\n                        </div>\n                    </Link>\n                )) : (\n                    <div>\n                    <h3>No posts yet</h3>\n                  </div> \n                )}\n            </div>\n    </div>\n    )\n}\n\nAll.getInitialProps = async(ctx) => {\n    const res = await fetch(\"https://h3-staffing.now.sh/api/blog/all\")\n    const json = await res.json();\n    console.log(\"below is from getInitialProps\")\n    console.log(json)\n\n    return {json}\n}\n\nexport default All;"]},"metadata":{},"sourceType":"module"}