{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/comps/contexts/userProvider.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext, useContext } from \"react\"; // Make a new context\n\nexport const UserContext = createContext();\nexport const useUserProv = useContext(UserContext); // Create provider component\n\nexport class UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      statusUrl: \"\"\n    });\n  }\n\n  render() {\n    return __jsx(UserContext.Provider, {\n      value: {\n        state: this.state,\n        getStatusUrl: () => {\n          if (true) {\n            this.setState({\n              statusUrl: \"http://localhost:3000\"\n            });\n          } else {\n            this.setState({\n              statusUrl: \"https://https://h3-staffing.now.sh\"\n            });\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n} // const UserConsumer = UserContext.Consumer;\n// export default UserProvider;\n// export { UserConsumer };","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/comps/contexts/userProvider.js"],"names":["React","Component","createContext","useContext","UserContext","useUserProv","UserProvider","statusUrl","render","state","getStatusUrl","setState","props","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,EAA0CC,UAA1C,QAA4D,OAA5D,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;AACP,OAAO,MAAMG,WAAW,GAAGF,UAAU,CAACC,WAAD,CAA9B,C,CAEP;;AACA,OAAO,MAAME,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAChC;AACJM,MAAAA,SAAS,EAAE;AADP,KADgC;AAAA;;AAKxCC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,WAAD,CAAa,QAAb;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,KAAKA,KADT;AAEHC,QAAAA,YAAY,EAAE,MAAM;AAChB,oBAA2C;AACvC,iBAAKC,QAAL,CAAc;AAAEJ,cAAAA,SAAS,EAAE;AAAb,aAAd;AACH,WAFD,MAEO;AACH,iBAAKI,QAAL,CAAc;AAAEJ,cAAAA,SAAS,EAAE;AAAb,aAAd;AACH;AACJ;AARE,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYK,KAAKK,KAAL,CAAWC,QAZhB,CADJ;AAgBH;;AAtBuC,C,CAyB5C;AAEA;AAEA","sourcesContent":["import React, { Component, createContext, useContext } from \"react\";\n\n// Make a new context\nexport const UserContext = createContext();\nexport const useUserProv = useContext(UserContext)\n\n// Create provider component\nexport class UserProvider extends Component {\n    state = {\n        statusUrl: \"\"\n    }\n    \n    render() {\n        return (\n            <UserContext.Provider\n                value={{\n                    state: this.state,\n                    getStatusUrl: () => {\n                        if(process.env.NODE_ENV === \"development\") {\n                            this.setState({ statusUrl: \"http://localhost:3000\" })\n                        } else {\n                            this.setState({ statusUrl: \"https://https://h3-staffing.now.sh\" })\n                        }\n                    }\n                }}\n            >\n                {this.props.children}\n            </UserContext.Provider>\n        )\n    }\n}\n\n// const UserConsumer = UserContext.Consumer;\n\n// export default UserProvider;\n\n// export { UserConsumer };"]},"metadata":{},"sourceType":"module"}