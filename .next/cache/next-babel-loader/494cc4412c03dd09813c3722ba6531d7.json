{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport \"../../public/static/css/allposts.scss\";\nimport Navbar from \"../comps/navbar\";\nimport Footer from \"../comps/footer\";\nimport { useEnv } from \"../comps/contexts/envProvider\";\nimport axios from \"axios\";\n\nvar All = function All(posts) {\n  var _useState = useState([]),\n      allPosts = _useState[0],\n      setPosts = _useState[1];\n\n  var statusUrl = useEnv();\n  useEffect(function () {\n    // setPosts([posts.json][0]);\n    axios.get(\"\".concat(statusUrl, \"/api/blog/all\")).then(function (res) {\n      return setPosts(_toConsumableArray(res.data).reverse());\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"allParent\"\n  }, __jsx(Navbar, null), __jsx(\"div\", {\n    className: \"allMother\"\n  }, __jsx(\"h1\", {\n    className: \"allHead\"\n  }, \"All Posts\"), __jsx(\"div\", {\n    className: \"postGrid\"\n  }, allPosts.length !== 0 ? allPosts.map(function (post) {\n    return __jsx(Link, {\n      key: post.uid,\n      href: \"/blog/\".concat(post.uid)\n    }, __jsx(\"div\", {\n      key: post.uid,\n      className: \"blogPost\"\n    }, __jsx(\"h3\", {\n      className: \"blogTitle\"\n    }, post.title), __jsx(\"div\", {\n      className: \"dateTimeDiv\"\n    }, __jsx(\"p\", {\n      className: \"blogTime\"\n    }, post.time_created), __jsx(\"p\", {\n      className: \"blogDate\"\n    }, post.date_created)), __jsx(\"hr\", {\n      className: \"blogsHr\"\n    }), post.blog_text.length > 150 ? __jsx(\"p\", {\n      className: \"blogText\"\n    }, post.blog_text.slice(0, 50), \"...\") : __jsx(\"p\", {\n      className: \"blogText\"\n    }, post.blog_text)));\n  }) : __jsx(\"div\", null, __jsx(\"h3\", null, \"No posts yet\")))), __jsx(Footer, null));\n}; // All.getInitialProps = async ctx => {\n//   const res = await fetch(`${statusUrl}/api/blog/all`);\n//   const json = await res.json();\n//   return { json };\n// };\n\n\nexport default All;","map":null,"metadata":{},"sourceType":"module"}