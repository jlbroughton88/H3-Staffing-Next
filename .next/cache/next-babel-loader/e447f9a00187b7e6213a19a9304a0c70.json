{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\n\nvar All = function All() {\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    axios.get(\"\".concat(statusUrl, \"/api/blogpost/get\")).then(function (response) {\n      return setPosts(_toConsumableArray(response.data));\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"allMother\"\n  }, __jsx(\"h1\", {\n    className: \"allHead\"\n  }, \"All Posts\"), __jsx(\"div\", {\n    className: \"postGrid\"\n  }, posts.reverse().map(function (post) {\n    return __jsx(Link, {\n      key: post.uid,\n      to: \"/blog/\".concat(post.uid)\n    }, __jsx(\"div\", {\n      key: post.uid,\n      className: \"blogPost\"\n    }, __jsx(\"h3\", {\n      className: \"blogTitle\"\n    }, post.title), __jsx(\"div\", {\n      className: \"dateTimeDiv\"\n    }, __jsx(\"p\", {\n      className: \"blogTime\"\n    }, post.time_created), __jsx(\"p\", {\n      className: \"blogDate\"\n    }, post.date_created)), __jsx(\"hr\", {\n      className: \"blogsHr\"\n    }), post.blog_text.length > 150 ? __jsx(\"p\", {\n      className: \"blogText\"\n    }, post.blog_text.slice(0, 150), \"...\") : __jsx(\"p\", {\n      className: \"blogText\"\n    }, post.blog_text)));\n  })));\n};\n\nexport default All;","map":null,"metadata":{},"sourceType":"module"}