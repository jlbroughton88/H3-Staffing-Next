{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/all.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport \"../../public/static/css/allposts.scss\";\nimport Navbar from \"../comps/navbar\";\nimport Footer from \"../comps/footer\";\n\nvar All = function All(posts) {\n  var _useState = useState([]),\n      allPosts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    setPosts([posts.json][0]);\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"allMother\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"allHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"All Posts\"), __jsx(\"div\", {\n    className: \"postGrid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, console.log(\"below is line 21\"), console.log(typeof allPosts), allPosts.length !== 0 ? allPosts.reverse().map(function (post) {\n    return __jsx(Link, {\n      key: post.uid,\n      href: \"/blog/\".concat(post.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      key: post.uid,\n      className: \"blogPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"blogTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, post.title), __jsx(\"div\", {\n      className: \"dateTimeDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"blogTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, post.time_created), __jsx(\"p\", {\n      className: \"blogDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, post.date_created)), __jsx(\"hr\", {\n      className: \"blogsHr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), post.blog_text.length > 150 ? __jsx(\"p\", {\n      className: \"blogText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, post.blog_text.slice(0, 150), \"...\") : __jsx(\"p\", {\n      className: \"blogText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, post.blog_text)));\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"No posts yet\")))), __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};\n\nAll.getInitialProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(statusUrl, \"/api/blog/all\")));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            json: json\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default All;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/all.js"],"names":["React","useState","useEffect","fetch","Link","Navbar","Footer","All","posts","allPosts","setPosts","json","console","log","length","reverse","map","post","uid","title","time_created","date_created","blog_text","slice","getInitialProps","ctx","statusUrl","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport \"../../public/static/css/allposts.scss\";\nimport Navbar from \"../comps/navbar\";\nimport Footer from \"../comps/footer\";\n\nconst All = posts => {\n  const [allPosts, setPosts] = useState([]);\n\n  useEffect(() => {\n    setPosts([posts.json][0]);\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"allMother\">\n        <h1 className=\"allHead\">All Posts</h1>\n        <div className=\"postGrid\">\n          {console.log(\"below is line 21\")}\n          {console.log(typeof allPosts)}\n          {allPosts.length !== 0 ? (\n            allPosts.reverse().map(post => (\n              <Link key={post.uid} href={`/blog/${post.uid}`}>\n                <div key={post.uid} className=\"blogPost\">\n                  <h3 className=\"blogTitle\">{post.title}</h3>\n                  <div className=\"dateTimeDiv\">\n                    <p className=\"blogTime\">{post.time_created}</p>\n                    <p className=\"blogDate\">{post.date_created}</p>\n                  </div>\n                  <hr className=\"blogsHr\" />\n                  {post.blog_text.length > 150 ? (\n                    <p className=\"blogText\">\n                      {post.blog_text.slice(0, 150)}...\n                    </p>\n                  ) : (\n                    <p className=\"blogText\">{post.blog_text}</p>\n                  )}\n                </div>\n              </Link>\n            ))\n          ) : (\n            <div>\n              <h3>No posts yet</h3>\n            </div>\n          )}\n        </div>\n      </div>\n      <Footer/>\n    </div>\n  );\n};\n\nAll.getInitialProps = async ctx => {\n  const res = await fetch(`${statusUrl}/api/blog/all`);\n  const json = await res.json();\n\n  return { json };\n};\n\nexport default All;\n"]},"metadata":{},"sourceType":"module"}