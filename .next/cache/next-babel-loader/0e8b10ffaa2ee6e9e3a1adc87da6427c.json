{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/[uid].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\n\nconst Single = () => {\n  const router = useRouter();\n  const {\n    uid\n  } = router.query;\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    axios.get(`https://h3-staffing.now.sh/api/blog/all`).then(response => setPosts([...response.data])).catch(err => console.log(err));\n  }, []);\n  return __jsx(\"div\", {\n    className: \"allMother\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"allHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"All Posts\"), __jsx(\"div\", {\n    className: \"postGrid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, posts.reverse().map(post => __jsx(Link, {\n    key: post.uid,\n    to: `/blog/${post.uid}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    key: post.uid,\n    className: \"blogPost\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"blogTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, post.title), __jsx(\"div\", {\n    className: \"dateTimeDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"blogTime\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, post.time_created), __jsx(\"p\", {\n    className: \"blogDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, post.date_created)), __jsx(\"hr\", {\n    className: \"blogsHr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), post.blog_text.length > 150 ? __jsx(\"p\", {\n    className: \"blogText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, post.blog_text.slice(0, 150), \"...\") : __jsx(\"p\", {\n    className: \"blogText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, post.blog_text))))));\n};\n\nexport default Single;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/[uid].js"],"names":["useRouter","Single","router","uid","query","posts","setPosts","useState","useEffect","axios","get","then","response","data","catch","err","console","log","reverse","map","post","title","time_created","date_created","blog_text","length","slice"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAUD,MAAM,CAACE,KAAvB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACAC,GADL,CACU,yCADV,EAEKC,IAFL,CAEUC,QAAQ,IAAIN,QAAQ,CAAC,CAAC,GAAGM,QAAQ,CAACC,IAAb,CAAD,CAF9B,EAGKC,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSV,KAAK,CAACa,OAAN,GAAgBC,GAAhB,CAAoBC,IAAI,IACrB,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACjB,GAAhB;AAAqB,IAAA,EAAE,EAAG,SAAQiB,IAAI,CAACjB,GAAI,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEiB,IAAI,CAACjB,GAAf;AAAoB,IAAA,SAAS,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BiB,IAAI,CAACC,KAAhC,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,IAAI,CAACE,YAA9B,CADJ,EAEI;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,IAAI,CAACG,YAA9B,CAFJ,CAFJ,EAMI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOKH,IAAI,CAACI,SAAL,CAAeC,MAAf,GAAwB,GAAxB,GACG;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBL,IAAI,CAACI,SAAL,CAAeE,KAAf,CAAqB,CAArB,EAAwB,GAAxB,CAAzB,QADH,GAGG;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBN,IAAI,CAACI,SAA9B,CAVR,CADJ,CADH,CADT,CAFA,CADJ;AAwBH,CArCD;;AAuCA,eAAevB,MAAf","sourcesContent":["import { useRouter } from \"next/router\";\n\nconst Single = () => {\n\n    const router = useRouter();\n    const { uid } = router.query;\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n        axios\n            .get(`https://h3-staffing.now.sh/api/blog/all`)\n            .then(response => setPosts([...response.data]))\n            .catch(err => console.log(err))\n    }, [])\n\n    return (\n        <div className=\"allMother\">\n        <h1 className=\"allHead\">All Posts</h1>\n        <div className=\"postGrid\">\n                {posts.reverse().map(post =>\n                    <Link key={post.uid} to={`/blog/${post.uid}`}>\n                        <div key={post.uid} className=\"blogPost\">\n                            <h3 className=\"blogTitle\">{post.title}</h3>\n                            <div className=\"dateTimeDiv\">\n                                <p className=\"blogTime\">{post.time_created}</p>\n                                <p className=\"blogDate\">{post.date_created}</p>\n                            </div>\n                            <hr className=\"blogsHr\" />\n                            {post.blog_text.length > 150 ?\n                                <p className=\"blogText\">{post.blog_text.slice(0, 150)}...</p>\n                                :\n                                <p className=\"blogText\">{post.blog_text}</p>\n                            }\n                        </div>\n                    </Link>\n                )}\n            </div>\n    </div>\n    )\n}\n\nexport default Single;"]},"metadata":{},"sourceType":"module"}