{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/all.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport \"../../public/static/css/allposts.scss\";\nimport Navbar from \"../comps/navbar\";\n\nconst All = posts => {\n  const {\n    0: allPosts,\n    1: setPosts\n  } = useState([]);\n  useEffect(() => {\n    setPosts([posts.json][0]);\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"allMother\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"allHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"All Posts\"), __jsx(\"div\", {\n    className: \"postGrid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, console.log(\"below is line 21\"), console.log(typeof allPosts), allPosts.length !== 0 ? allPosts.reverse().map(post => __jsx(Link, {\n    key: post.uid,\n    href: `/blog/${post.uid}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    key: post.uid,\n    className: \"blogPost\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"blogTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, post.title), __jsx(\"div\", {\n    className: \"dateTimeDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"blogTime\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, post.time_created), __jsx(\"p\", {\n    className: \"blogDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, post.date_created)), __jsx(\"hr\", {\n    className: \"blogsHr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), post.blog_text.length > 150 ? __jsx(\"p\", {\n    className: \"blogText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, post.blog_text.slice(0, 150), \"...\") : __jsx(\"p\", {\n    className: \"blogText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, post.blog_text)))) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"No posts yet\")))));\n};\n\nAll.getInitialProps = async ctx => {\n  const res = await fetch(\"https://h3-staffing.now.sh/api/blog/all\");\n  const json = await res.json(); // console.log(\"below is from getInitialProps\")\n  // console.log(json)\n\n  return {\n    json\n  };\n};\n\nexport default All;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/all.js"],"names":["React","useState","useEffect","fetch","Link","Navbar","All","posts","allPosts","setPosts","json","console","log","length","reverse","map","post","uid","title","time_created","date_created","blog_text","slice","getInitialProps","ctx","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport \"../../public/static/css/allposts.scss\";\nimport Navbar from \"../comps/navbar\";\n\nconst All = (posts) => {\n\n    const [allPosts, setPosts] = useState([])\n\n    useEffect(() => {\n        setPosts([posts.json][0])\n    }, [])\n\n\n    return (\n        <div>\n            <Navbar />\n                    <div className=\"allMother\">\n        <h1 className=\"allHead\">All Posts</h1>\n        <div className=\"postGrid\">\n            {console.log(\"below is line 21\")}\n            {console.log(typeof(allPosts))}\n            {allPosts.length !== 0 ? (\n                allPosts.reverse().map(post =>\n                    <Link key={post.uid} href={`/blog/${post.uid}`}>\n                        <div key={post.uid} className=\"blogPost\">\n                            <h3 className=\"blogTitle\">{post.title}</h3>\n                            <div className=\"dateTimeDiv\">\n                                <p className=\"blogTime\">{post.time_created}</p>\n                                <p className=\"blogDate\">{post.date_created}</p>\n                            </div>\n                            <hr className=\"blogsHr\" />\n                            {post.blog_text.length > 150 ?\n                                <p className=\"blogText\">{post.blog_text.slice(0, 150)}...</p>\n                                :\n                                <p className=\"blogText\">{post.blog_text}</p>\n                            }\n                        </div>\n                    </Link>\n                )) : (\n                    <div>\n                    <h3>No posts yet</h3>\n                  </div> \n                )}\n            </div>\n        </div>\n\n    </div>\n    )\n}\n\nAll.getInitialProps = async(ctx) => {\n    const res = await fetch(\"https://h3-staffing.now.sh/api/blog/all\")\n    const json = await res.json();\n    // console.log(\"below is from getInitialProps\")\n    // console.log(json)\n\n    return {json}\n}\n\nexport default All;"]},"metadata":{},"sourceType":"module"}