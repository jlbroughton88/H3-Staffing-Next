{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/comps/contexts/envProvider.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createContext, useContext, useState, useEffect } from \"react\"; // Make a new context\n\nexport const EnvContext = createContext();\nexport const useEnv = () => useContext(EnvContext);\n\nconst EnvProvider = props => {\n  const {\n    0: statusUrl,\n    1: setStatusUrl\n  } = useState(\"\");\n  useEffect(() => {\n    if (true) {\n      setStatusUrl(\"http://localhost:3000\");\n    } else {\n      setStatusUrl(\"https://word-processor.now.sh\");\n    }\n  }, []);\n  return __jsx(EnvContext.Provider, {\n    value: statusUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default EnvProvider;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/comps/contexts/envProvider.js"],"names":["React","Component","createContext","useContext","useState","useEffect","EnvContext","useEnv","EnvProvider","props","statusUrl","setStatusUrl","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,EAA0CC,UAA1C,EAAsDC,QAAtD,EAAgEC,SAAhE,QAAiF,OAAjF,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACP,OAAO,MAAMK,MAAM,GAAG,MAAMJ,UAAU,CAACG,UAAD,CAA/B;;AAEP,MAAME,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,cAA2C;AACvCM,MAAAA,YAAY,CAAC,uBAAD,CAAZ;AACH,KAFD,MAEO;AACHA,MAAAA,YAAY,CAAC,+BAAD,CAAZ;AACH;AACJ,GANQ,EAMN,EANM,CAAT;AAQA,SACI,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAED,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACG,QADX,CADJ;AAKH,CAjBD;;AAmBA,eAAeJ,WAAf","sourcesContent":["import React, { Component, createContext, useContext, useState, useEffect } from \"react\";\n\n// Make a new context\nexport const EnvContext = createContext();\nexport const useEnv = () => useContext(EnvContext)\n\nconst EnvProvider = props => {\n\n    const [statusUrl, setStatusUrl] = useState(\"\");\n\n    useEffect(() => {\n        if(process.env.NODE_ENV === \"development\") {\n            setStatusUrl(\"http://localhost:3000\")\n        } else {\n            setStatusUrl(\"https://word-processor.now.sh\")\n        }\n    }, [])\n\n    return (\n        <EnvContext.Provider value={statusUrl}>\n            {props.children}\n        </EnvContext.Provider>\n    )\n}\n\nexport default EnvProvider;"]},"metadata":{},"sourceType":"module"}