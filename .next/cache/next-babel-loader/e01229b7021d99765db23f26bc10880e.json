{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/all.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\n\nvar All = function All() {\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    axios.get(\"\".concat(statusUrl, \"/api/blogpost/get\")).then(function (response) {\n      return setPosts(_toConsumableArray(response.data));\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"allMother\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"allHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"All Posts\"), __jsx(\"div\", {\n    className: \"postGrid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, posts.reverse().map(function (post) {\n    return __jsx(Link, {\n      key: post.uid,\n      to: \"/blog/\".concat(post.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      key: post.uid,\n      className: \"blogPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"blogTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, post.title), __jsx(\"div\", {\n      className: \"dateTimeDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"blogTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, post.time_created), __jsx(\"p\", {\n      className: \"blogDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, post.date_created)), __jsx(\"hr\", {\n      className: \"blogsHr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), post.blog_text.length > 150 ? __jsx(\"p\", {\n      className: \"blogText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, post.blog_text.slice(0, 150), \"...\") : __jsx(\"p\", {\n      className: \"blogText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, post.blog_text)));\n  })));\n};\n\nexport default All;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/H3-Staffing-Next/pages/blog/all.js"],"names":["React","useState","useEffect","All","posts","setPosts","axios","get","statusUrl","then","response","data","err","console","log","reverse","map","post","uid","title","time_created","date_created","blog_text","length","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBAEYF,QAAQ,CAAC,EAAD,CAFpB;AAAA,MAEPG,KAFO;AAAA,MAEAC,QAFA;;AAIdH,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,KAAK,CACAC,GADL,WACYC,SADZ,wBAEKC,IAFL,CAEU,UAAAC,QAAQ;AAAA,aAAIL,QAAQ,oBAAKK,QAAQ,CAACC,IAAd,EAAZ;AAAA,KAFlB,WAGW,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAHd;AAIH,GALQ,EAKN,EALM,CAAT;AAQA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSR,KAAK,CAACW,OAAN,GAAgBC,GAAhB,CAAoB,UAAAC,IAAI;AAAA,WACrB,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAhB;AAAqB,MAAA,EAAE,kBAAWD,IAAI,CAACC,GAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAED,IAAI,CAACC,GAAf;AAAoB,MAAA,SAAS,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,IAAI,CAACE,KAAhC,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBF,IAAI,CAACG,YAA9B,CADJ,EAEI;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBH,IAAI,CAACI,YAA9B,CAFJ,CAFJ,EAMI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOKJ,IAAI,CAACK,SAAL,CAAeC,MAAf,GAAwB,GAAxB,GACG;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBN,IAAI,CAACK,SAAL,CAAeE,KAAf,CAAqB,CAArB,EAAwB,GAAxB,CAAzB,QADH,GAGG;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBP,IAAI,CAACK,SAA9B,CAVR,CADJ,CADqB;AAAA,GAAxB,CADT,CAFA,CADJ;AAwBH,CApCD;;AAsCA,eAAenB,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst All = () => {\n\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n        axios\n            .get(`${statusUrl}/api/blogpost/get`)\n            .then(response => setPosts([...response.data]))\n            .catch(err => console.log(err))\n    }, [])\n\n\n    return (\n        <div className=\"allMother\">\n        <h1 className=\"allHead\">All Posts</h1>\n        <div className=\"postGrid\">\n                {posts.reverse().map(post =>\n                    <Link key={post.uid} to={`/blog/${post.uid}`}>\n                        <div key={post.uid} className=\"blogPost\">\n                            <h3 className=\"blogTitle\">{post.title}</h3>\n                            <div className=\"dateTimeDiv\">\n                                <p className=\"blogTime\">{post.time_created}</p>\n                                <p className=\"blogDate\">{post.date_created}</p>\n                            </div>\n                            <hr className=\"blogsHr\" />\n                            {post.blog_text.length > 150 ?\n                                <p className=\"blogText\">{post.blog_text.slice(0, 150)}...</p>\n                                :\n                                <p className=\"blogText\">{post.blog_text}</p>\n                            }\n                        </div>\n                    </Link>\n                )}\n            </div>\n    </div>\n    )\n}\n\nexport default All;"]},"metadata":{},"sourceType":"module"}